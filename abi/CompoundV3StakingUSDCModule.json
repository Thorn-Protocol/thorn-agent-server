{
    "address": "0x0165878A594ca255338adfa4d48449f69242Eb8F",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_treasury",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "_government",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "_usdc",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "_comet",
                    "type": "address"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "token",
                    "type": "address"
                }
            ],
            "name": "SafeERC20FailedOperation",
            "type": "error"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "oldComet",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "newComet",
                    "type": "address"
                }
            ],
            "name": "CometChanged",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "Deposited",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "oldGovernment",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "newGovernment",
                    "type": "address"
                }
            ],
            "name": "GovernmentChanged",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "Withdrawn",
            "type": "event"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_comet",
                    "type": "address"
                }
            ],
            "name": "changeComet",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_government",
                    "type": "address"
                }
            ],
            "name": "changeGovernment",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "comet",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes",
                    "name": "",
                    "type": "bytes"
                }
            ],
            "name": "deposit",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getTotalValue",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address[]",
                    "name": "target",
                    "type": "address[]"
                },
                {
                    "internalType": "uint256[]",
                    "name": "value",
                    "type": "uint256[]"
                },
                {
                    "internalType": "bytes[]",
                    "name": "data",
                    "type": "bytes[]"
                }
            ],
            "name": "gorvermentExec",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "government",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "treasury",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "usdc",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                },
                {
                    "internalType": "bytes",
                    "name": "",
                    "type": "bytes"
                }
            ],
            "name": "withdraw",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes",
                    "name": "",
                    "type": "bytes"
                }
            ],
            "name": "withdraw",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        }
    ],
    "transactionHash": "0x5b9def9e85e39aa88e6cd6b2ef56fe0fff4072888244bbfa3cf31c3a3665183b",
    "receipt": {
        "to": null,
        "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
        "contractAddress": "0x0165878A594ca255338adfa4d48449f69242Eb8F",
        "transactionIndex": 0,
        "gasUsed": "871771",
        "logsBloom": "0x
        "blockHash": "0xe48c68ff92010cbf4a419729c24f7179a920813b186a181cc7f5ef4167f06a11",
        "transactionHash": "0x5b9def9e85e39aa88e6cd6b2ef56fe0fff4072888244bbfa3cf31c3a3665183b",
        "logs": [],
        "blockNumber": 11,
        "cumulativeGasUsed": "871771",
        "status": 1,
        "byzantium": true
    },
    "args": ["0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9", "0x3C44CdDdB6a900fa2b585dd299e03d12FA4293BC", "0x5FbDB2315678afecb367f032d93F642f64180aa3", "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0"],
    "numDeployments": 1,
    "solcInputHash": "68dfe69a038f4e3657e0a9a025280637",
    "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_government\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdc\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_comet\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldComet\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newComet\",\"type\":\"address\"}],\"name\":\"CometChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldGovernment\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newGovernment\",\"type\":\"address\"}],\"name\":\"GovernmentChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_comet\",\"type\":\"address\"}],\"name\":\"changeComet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_government\",\"type\":\"address\"}],\"name\":\"changeGovernment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"comet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"target\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"gorvermentExec\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"government\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdc\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/modules/CompoundV3USDC/CompoundV3StakingUSDCModules.sol\":\"CompoundV3StakingUSDCModule\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @title IERC1363\\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\\n *\\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\\n */\\ninterface IERC1363 is IERC20, IERC165 {\\n    /*\\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\\n     * 0xb0202a11 ===\\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\\n     */\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferAndCall(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @param data Additional data with no specified format, sent in call to `to`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param from The address which you want to send tokens from.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param from The address which you want to send tokens from.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @param data Additional data with no specified format, sent in call to `to`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function approveAndCall(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     * @param data Additional data with no specified format, sent in call to `spender`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../utils/introspection/IERC165.sol\\\";\\n\",\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../token/ERC20/IERC20.sol\\\";\\n\",\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\nimport {IERC1363} from \\\"../../../interfaces/IERC1363.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    /**\\n     * @dev An operation with an ERC-20 token failed.\\n     */\\n    error SafeERC20FailedOperation(address token);\\n\\n    /**\\n     * @dev Indicates a failed `decreaseAllowance` request.\\n     */\\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     *\\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \\\"client\\\"\\n     * smart contract uses ERC-7674 to set temporary allowances, then the \\\"client\\\" smart contract should avoid using\\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        forceApprove(token, spender, oldAllowance + value);\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\\n     * value, non-reverting calls are assumed to be successful.\\n     *\\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \\\"client\\\"\\n     * smart contract uses ERC-7674 to set temporary allowances, then the \\\"client\\\" smart contract should avoid using\\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\\n        unchecked {\\n            uint256 currentAllowance = token.allowance(address(this), spender);\\n            if (currentAllowance < requestedDecrease) {\\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\\n            }\\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     *\\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\\n     * only sets the \\\"standard\\\" allowance. Any temporary allowance will remain active, in addition to the value being\\n     * set here.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\\n        if (to.code.length == 0) {\\n            safeTransfer(token, to, value);\\n        } else if (!token.transferAndCall(to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function transferFromAndCallRelaxed(\\n        IERC1363 token,\\n        address from,\\n        address to,\\n        uint256 value,\\n        bytes memory data\\n    ) internal {\\n        if (to.code.length == 0) {\\n            safeTransferFrom(token, from, to, value);\\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\\n     * once without retrying, and relies on the returned value to be true.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\\n        if (to.code.length == 0) {\\n            forceApprove(token, to, value);\\n        } else if (!token.approveAndCall(to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        uint256 returnSize;\\n        uint256 returnValue;\\n        assembly (\\\"memory-safe\\\") {\\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\\n            // bubble errors\\n            if iszero(success) {\\n                let ptr := mload(0x40)\\n                returndatacopy(ptr, 0, returndatasize())\\n                revert(ptr, returndatasize())\\n            }\\n            returnSize := returndatasize()\\n            returnValue := mload(0)\\n        }\\n\\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        bool success;\\n        uint256 returnSize;\\n        uint256 returnValue;\\n        assembly (\\\"memory-safe\\\") {\\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\\n            returnSize := returndatasize()\\n            returnValue := mload(0)\\n        }\\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\\n    }\\n}\\n\",\"keccak256\":\"0x4ea01544758fd2c7045961904686bfe232d2220a04ecaa2d6b08dac17827febf\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\"},\"contracts/interfaces/IModule.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.24;\\n\\ninterface IModule {\\n    function deposit(bytes memory data) external;\\n\\n    function withdraw(bytes memory data) external;\\n\\n    function withdraw(uint256 amount, bytes memory data) external;\\n\\n    function getTotalValue() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x2bc72555683a5317ce29f3f02a0a010663bcc11e6662fa53accf15cdf9ea00a2\",\"license\":\"MIT\"},\"contracts/modules/CompoundV3USDC/CompoundV3StakingUSDCModules.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.24;\\nimport \\\"../../interfaces/IModule.sol\\\";\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\n\\ninterface IComet {\\n    function supply(address asset, uint256 amount) external;\\n\\n    function withdraw(address asset, uint256 amount) external;\\n\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    function baseToken() external view returns (address);\\n}\\n\\ncontract CompoundV3StakingUSDCModule is IModule {\\n    using SafeERC20 for IERC20;\\n\\n    address public usdc;\\n    address public treasury;\\n    address public government;\\n    address public comet;\\n\\n    // Add events\\n    event Deposited(uint256 amount);\\n    event Withdrawn(uint256 amount);\\n    event GovernmentChanged(address oldGovernment, address newGovernment);\\n    event CometChanged(address oldComet, address newComet);\\n\\n    modifier onlyTreasury() {\\n        require(msg.sender == treasury, \\\"Only agent\\\");\\n        _;\\n    }\\n\\n    modifier onlyGovernment() {\\n        require(msg.sender == government, \\\"Only governance\\\");\\n        _;\\n    }\\n\\n    constructor(\\n        address _treasury,\\n        address _government,\\n        address _usdc,\\n        address _comet\\n    ) {\\n        treasury = _treasury;\\n        government = _government;\\n        usdc = _usdc;\\n        comet = _comet;\\n    }\\n\\n    // treasury functions\\n\\n    function deposit(bytes memory /*data*/) public override onlyTreasury {\\n        uint256 usdcBalance = IERC20(usdc).balanceOf(address(this));\\n        require(usdcBalance > 0, \\\"No USDC to deposit\\\");\\n        IERC20(usdc).approve(comet, usdcBalance);\\n        IComet(comet).supply(usdc, usdcBalance);\\n        emit Deposited(usdcBalance);\\n    }\\n\\n    function withdraw(bytes memory /*data*/) public override onlyTreasury {\\n        uint256 compoundBalance = IComet(comet).balanceOf(address(this));\\n        require(compoundBalance > 0, \\\"No balance to withdraw\\\");\\n        IComet(comet).withdraw(usdc, compoundBalance);\\n        uint256 usdcInContract = IERC20(usdc).balanceOf(address(this));\\n        IERC20(usdc).safeTransfer(treasury, usdcInContract);\\n        emit Withdrawn(usdcInContract);\\n    }\\n\\n    function withdraw(\\n        uint256 amount,\\n        bytes memory /*data*/\\n    ) public override onlyTreasury {\\n        uint256 compoundBalance = IComet(comet).balanceOf(address(this));\\n        require(compoundBalance > 0, \\\"No balance to withdraw\\\");\\n        IComet(comet).withdraw(usdc, amount);\\n        IERC20(usdc).safeTransfer(treasury, amount);\\n    }\\n\\n    // governance functions\\n\\n    function changeGovernment(address _government) public onlyGovernment {\\n        address oldGovernment = government;\\n        government = _government;\\n        emit GovernmentChanged(oldGovernment, _government);\\n    }\\n\\n    function gorvermentExec(\\n        address[] calldata target,\\n        uint256[] calldata value,\\n        bytes[] calldata data\\n    ) public onlyGovernment {\\n        for (uint256 i = 0; i < target.length; i++)\\n            _call(target[i], value[i], data[i]);\\n    }\\n\\n    // view functions\\n\\n    function getTotalValue() public view override returns (uint256) {\\n        uint256 usdcInContract = IERC20(usdc).balanceOf(address(this));\\n        uint256 usdcInCompound = IComet(comet).balanceOf(address(this));\\n        return usdcInContract + usdcInCompound;\\n    }\\n\\n    // internal functions\\n\\n    function _call(address target, uint256 value, bytes memory data) internal {\\n        assembly {\\n            let success := call(\\n                gas(),\\n                target,\\n                value,\\n                add(data, 0x20),\\n                mload(data),\\n                0,\\n                0\\n            )\\n            let ptr := mload(0x40)\\n            returndatacopy(ptr, 0, returndatasize())\\n            if iszero(success) {\\n                revert(ptr, returndatasize())\\n            }\\n        }\\n    }\\n\\n    function changeComet(address _comet) public onlyGovernment {\\n        address oldComet = comet;\\n        comet = _comet;\\n        emit CometChanged(oldComet, _comet);\\n    }\\n}\\n\",\"keccak256\":\"0xdb9cfcd959693458a4af9173213379765f5106c3d1dcb625e1b9d5e95b33272a\",\"license\":\"UNLICENSED\"}},\"version\":1}",
    "bytecode": "0x6080346100b957601f610e0438819003918201601f19168301916001600160401b038311848410176100be578084926080946040528339810103126100b957610047816100d4565b90610054602082016100d4565b61006c6060610065604085016100d4565b93016100d4565b9060018060a01b03928380928160018060a01b03199716876001541617600155168560025416176002551683600054161760005516906003541617600355604051610d1b90816100e98239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036100b95756fe6080604052600436101561001257600080fd5b60003560e01c8063030ba25d146100c75780630968f264146100c25780632672f526146100bd5780633e413bee146100b85780635b58a289146100b357806361d027b3146100ae5780636844a2e9146100a957806398b1e06a146100a4578063ba3e9c121461009f578063c58f7c311461009a5763caa648b41461009557600080fd5b6109cb565b610937565b61090e565b610736565b6106a6565b61066c565b61056a565b610510565b6104e7565b610327565b610187565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff81116100f657604052565b6100cc565b90601f8019910116810190811067ffffffffffffffff8211176100f657604052565b92919267ffffffffffffffff82116100f65760405191610147601f8201601f1916602001846100fb565b829481845281830111610164578281602093846000960137010152565b600080fd5b9080601f83011215610164578160206101849335910161011d565b90565b346101645760403660031901126101645760043560243567ffffffffffffffff8111610164576101bb903690600401610169565b506101d160018060a01b03600154163314610ab5565b6003546101f4906101e8906001600160a01b031681565b6001600160a01b031690565b6040516370a0823160e01b8152306004820152909190602081602481865afa80156102c85761022d916000916102cd575b501515610b09565b6000546001600160a01b031691803b156101645760405163f3fef3a360e01b81526001600160a01b03939093166004840152602483018290526000908390604490829084905af19182156102c8576102ad926102af575b5060005461029a906001600160a01b03166101e8565b6001546001600160a01b03165b90610c2e565b005b806102bc6102c2926100e2565b806104dc565b38610284565b610afd565b6102ef915060203d6020116102f5575b6102e781836100fb565b810190610aee565b38610225565b503d6102dd565b6020600319820112610164576004359067ffffffffffffffff82116101645761018491600401610169565b3461016457610335366102fc565b506001546001600160a01b039061034f9082163314610ab5565b600354610366906101e8906001600160a01b031681565b6040516370a0823160e01b80825230600483015260209290918381602481855afa9081156102c8576000916104bf575b506103a2811515610b09565b6000546001600160a01b031690823b156101645760405163f3fef3a360e01b81526001600160a01b039290921660048301526024820152906000908290604490829084905af180156102c8576104ac575b50600054829061040b906001600160a01b03166101e8565b60405192835230600484015291938490602490829085165afa9081156102c8577f430648de173157e069201c943adb2d4e340e7cf5b27b1b09c9cb852f03d63b569361048293600093610487575b50506001546104729183916001600160a01b03166102a7565b6040519081529081906020820190565b0390a1005b61047292935090816104a492903d106102f5576102e781836100fb565b919038610459565b806102bc6104b9926100e2565b386103f3565b6104d69150843d86116102f5576102e781836100fb565b38610396565b600091031261016457565b34610164576000366003190112610164576002546040516001600160a01b039091168152602090f35b34610164576000366003190112610164576000546040516001600160a01b039091168152602090f35b9181601f840112156101645782359167ffffffffffffffff8311610164576020808501948460051b01011161016457565b346101645760603660031901126101645767ffffffffffffffff6004358181116101645761059c903690600401610539565b602435838111610164576105b4903690600401610539565b92604435858111610164576105cd903690600401610539565b9390916105e560018060a01b03600254163314610b4e565b60005b8281106105f157005b6105fc818484610ba2565b359061060782610695565b610612818988610ba2565b3587821015610667578160051b860135601e1987360301811215610164578601928335938b8511610164576020019184360383136101645761065b61066193600196369161011d565b91610cc1565b016105e8565b610b8c565b34610164576000366003190112610164576001546040516001600160a01b039091168152602090f35b6001600160a01b0381160361016457565b34610164576020366003190112610164577fd220bce19af917092091d2523c144f080a8bf6225a4da549d0c689f9f87cd09f6004356106e481610695565b6002546001600160a01b0380821691906106ff338414610b4e565b6001600160a01b031990911690831617600255604080516001600160a01b0392831681529190921660208201529081908101610482565b3461016457610744366102fc565b5061075a60018060a01b03600154163314610ab5565b60008054610772906101e8906001600160a01b031681565b6040516370a0823160e01b8152306004820152906020908183602481845afa9283156102c85784936108e9575b5081836107eb926107b1821515610bb2565b60035460405163095ea7b360e01b81526001600160a01b039091166004820152602481019290925290928391908290889082906044820190565b03925af180156102c8576108bb575b5050600354610813906101e8906001600160a01b031681565b825490919083906001600160a01b0316833b156108b757604051631e573fb760e31b81526001600160a01b0391909116600482015260248101839052928390604490829084905af19081156102c8577f2a89b2e3d580398d6dc2db5e0f336b52602bbaa51afa9bb5cdf59239cf0d2bea9261089e926108a4575b506040519081529081906020820190565b0390a180f35b806102bc6108b1926100e2565b3861088d565b5080fd5b816108da92903d106108e2575b6108d281836100fb565b810190610bf3565b5038806107fa565b503d6108c8565b6107eb9193506109068391823d84116102f5576102e781836100fb565b93915061079f565b34610164576000366003190112610164576003546040516001600160a01b039091168152602090f35b34610164576020366003190112610164577f3b9ed6bfb2e151624850a1a8fe771337bfb0ad1a05f5d25c83f90029997a15eb60043561097581610695565b6002546001600160a01b03919061098f9083163314610b4e565b600380548284166001600160a01b031982161790915560408051939091166001600160a01b039081168452909116602083015281908101610482565b3461016457600080600319360112610ab25780546109f3906101e8906001600160a01b031681565b6040516370a0823160e01b808252306004830152602093929091908490829060249082905afa9081156102c8578391610a95575b506003548490610a41906101e8906001600160a01b031681565b604051938452306004850152839060249082905afa9182156102c857610a72946104729493610a76575b5050610c0b565b0390f35b610a8d929350803d106102f5576102e781836100fb565b903880610a6b565b610aac9150843d86116102f5576102e781836100fb565b38610a27565b80fd5b15610abc57565b60405162461bcd60e51b815260206004820152600a60248201526913db9b1e481859d95b9d60b21b6044820152606490fd5b90816020910312610164575190565b6040513d6000823e3d90fd5b15610b1057565b60405162461bcd60e51b81526020600482015260166024820152754e6f2062616c616e636520746f20776974686472617760501b6044820152606490fd5b15610b5557565b60405162461bcd60e51b815260206004820152600f60248201526e4f6e6c7920676f7665726e616e636560881b6044820152606490fd5b634e487b7160e01b600052603260045260246000fd5b91908110156106675760051b0190565b15610bb957565b60405162461bcd60e51b8152602060048201526012602482015271139bc81554d110c81d1bc819195c1bdcda5d60721b6044820152606490fd5b90816020910312610164575180151581036101645790565b91908201809211610c1857565b634e487b7160e01b600052601160045260246000fd5b60405163a9059cbb60e01b60208083019182526001600160a01b039490941660248301526044808301959095529381529092600091610c6e6064826100fb565b519082855af115610afd576000513d610cb857506001600160a01b0381163b155b610c965750565b604051635274afe760e01b81526001600160a01b039091166004820152602490fd5b60011415610c8f565b916000928392602083519301915af1604051903d6000833e15610ce15750565b3d90fdfea26469706673582212209728d380965c5058fe4d83fec5f2346109b80296999d67a9027ffd891050661164736f6c63430008180033",
    "deployedBytecode": "0x6080604052600436101561001257600080fd5b60003560e01c8063030ba25d146100c75780630968f264146100c25780632672f526146100bd5780633e413bee146100b85780635b58a289146100b357806361d027b3146100ae5780636844a2e9146100a957806398b1e06a146100a4578063ba3e9c121461009f578063c58f7c311461009a5763caa648b41461009557600080fd5b6109cb565b610937565b61090e565b610736565b6106a6565b61066c565b61056a565b610510565b6104e7565b610327565b610187565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff81116100f657604052565b6100cc565b90601f8019910116810190811067ffffffffffffffff8211176100f657604052565b92919267ffffffffffffffff82116100f65760405191610147601f8201601f1916602001846100fb565b829481845281830111610164578281602093846000960137010152565b600080fd5b9080601f83011215610164578160206101849335910161011d565b90565b346101645760403660031901126101645760043560243567ffffffffffffffff8111610164576101bb903690600401610169565b506101d160018060a01b03600154163314610ab5565b6003546101f4906101e8906001600160a01b031681565b6001600160a01b031690565b6040516370a0823160e01b8152306004820152909190602081602481865afa80156102c85761022d916000916102cd575b501515610b09565b6000546001600160a01b031691803b156101645760405163f3fef3a360e01b81526001600160a01b03939093166004840152602483018290526000908390604490829084905af19182156102c8576102ad926102af575b5060005461029a906001600160a01b03166101e8565b6001546001600160a01b03165b90610c2e565b005b806102bc6102c2926100e2565b806104dc565b38610284565b610afd565b6102ef915060203d6020116102f5575b6102e781836100fb565b810190610aee565b38610225565b503d6102dd565b6020600319820112610164576004359067ffffffffffffffff82116101645761018491600401610169565b3461016457610335366102fc565b506001546001600160a01b039061034f9082163314610ab5565b600354610366906101e8906001600160a01b031681565b6040516370a0823160e01b80825230600483015260209290918381602481855afa9081156102c8576000916104bf575b506103a2811515610b09565b6000546001600160a01b031690823b156101645760405163f3fef3a360e01b81526001600160a01b039290921660048301526024820152906000908290604490829084905af180156102c8576104ac575b50600054829061040b906001600160a01b03166101e8565b60405192835230600484015291938490602490829085165afa9081156102c8577f430648de173157e069201c943adb2d4e340e7cf5b27b1b09c9cb852f03d63b569361048293600093610487575b50506001546104729183916001600160a01b03166102a7565b6040519081529081906020820190565b0390a1005b61047292935090816104a492903d106102f5576102e781836100fb565b919038610459565b806102bc6104b9926100e2565b386103f3565b6104d69150843d86116102f5576102e781836100fb565b38610396565b600091031261016457565b34610164576000366003190112610164576002546040516001600160a01b039091168152602090f35b34610164576000366003190112610164576000546040516001600160a01b039091168152602090f35b9181601f840112156101645782359167ffffffffffffffff8311610164576020808501948460051b01011161016457565b346101645760603660031901126101645767ffffffffffffffff6004358181116101645761059c903690600401610539565b602435838111610164576105b4903690600401610539565b92604435858111610164576105cd903690600401610539565b9390916105e560018060a01b03600254163314610b4e565b60005b8281106105f157005b6105fc818484610ba2565b359061060782610695565b610612818988610ba2565b3587821015610667578160051b860135601e1987360301811215610164578601928335938b8511610164576020019184360383136101645761065b61066193600196369161011d565b91610cc1565b016105e8565b610b8c565b34610164576000366003190112610164576001546040516001600160a01b039091168152602090f35b6001600160a01b0381160361016457565b34610164576020366003190112610164577fd220bce19af917092091d2523c144f080a8bf6225a4da549d0c689f9f87cd09f6004356106e481610695565b6002546001600160a01b0380821691906106ff338414610b4e565b6001600160a01b031990911690831617600255604080516001600160a01b0392831681529190921660208201529081908101610482565b3461016457610744366102fc565b5061075a60018060a01b03600154163314610ab5565b60008054610772906101e8906001600160a01b031681565b6040516370a0823160e01b8152306004820152906020908183602481845afa9283156102c85784936108e9575b5081836107eb926107b1821515610bb2565b60035460405163095ea7b360e01b81526001600160a01b039091166004820152602481019290925290928391908290889082906044820190565b03925af180156102c8576108bb575b5050600354610813906101e8906001600160a01b031681565b825490919083906001600160a01b0316833b156108b757604051631e573fb760e31b81526001600160a01b0391909116600482015260248101839052928390604490829084905af19081156102c8577f2a89b2e3d580398d6dc2db5e0f336b52602bbaa51afa9bb5cdf59239cf0d2bea9261089e926108a4575b506040519081529081906020820190565b0390a180f35b806102bc6108b1926100e2565b3861088d565b5080fd5b816108da92903d106108e2575b6108d281836100fb565b810190610bf3565b5038806107fa565b503d6108c8565b6107eb9193506109068391823d84116102f5576102e781836100fb565b93915061079f565b34610164576000366003190112610164576003546040516001600160a01b039091168152602090f35b34610164576020366003190112610164577f3b9ed6bfb2e151624850a1a8fe771337bfb0ad1a05f5d25c83f90029997a15eb60043561097581610695565b6002546001600160a01b03919061098f9083163314610b4e565b600380548284166001600160a01b031982161790915560408051939091166001600160a01b039081168452909116602083015281908101610482565b3461016457600080600319360112610ab25780546109f3906101e8906001600160a01b031681565b6040516370a0823160e01b808252306004830152602093929091908490829060249082905afa9081156102c8578391610a95575b506003548490610a41906101e8906001600160a01b031681565b604051938452306004850152839060249082905afa9182156102c857610a72946104729493610a76575b5050610c0b565b0390f35b610a8d929350803d106102f5576102e781836100fb565b903880610a6b565b610aac9150843d86116102f5576102e781836100fb565b38610a27565b80fd5b15610abc57565b60405162461bcd60e51b815260206004820152600a60248201526913db9b1e481859d95b9d60b21b6044820152606490fd5b90816020910312610164575190565b6040513d6000823e3d90fd5b15610b1057565b60405162461bcd60e51b81526020600482015260166024820152754e6f2062616c616e636520746f20776974686472617760501b6044820152606490fd5b15610b5557565b60405162461bcd60e51b815260206004820152600f60248201526e4f6e6c7920676f7665726e616e636560881b6044820152606490fd5b634e487b7160e01b600052603260045260246000fd5b91908110156106675760051b0190565b15610bb957565b60405162461bcd60e51b8152602060048201526012602482015271139bc81554d110c81d1bc819195c1bdcda5d60721b6044820152606490fd5b90816020910312610164575180151581036101645790565b91908201809211610c1857565b634e487b7160e01b600052601160045260246000fd5b60405163a9059cbb60e01b60208083019182526001600160a01b039490941660248301526044808301959095529381529092600091610c6e6064826100fb565b519082855af115610afd576000513d610cb857506001600160a01b0381163b155b610c965750565b604051635274afe760e01b81526001600160a01b039091166004820152602490fd5b60011415610c8f565b916000928392602083519301915af1604051903d6000833e15610ce15750565b3d90fdfea26469706673582212209728d380965c5058fe4d83fec5f2346109b80296999d67a9027ffd891050661164736f6c63430008180033",
    "devdoc": {
        "errors": {
            "SafeERC20FailedOperation(address)": [
                {
                    "details": "An operation with an ERC-20 token failed."
                }
            ]
        },
        "kind": "dev",
        "methods": {},
        "version": 1
    },
    "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
    },
    "storageLayout": {
        "storage": [
            {
                "astId": 5985,
                "contract": "contracts/modules/CompoundV3USDC/CompoundV3StakingUSDCModules.sol:CompoundV3StakingUSDCModule",
                "label": "usdc",
                "offset": 0,
                "slot": "0",
                "type": "t_address"
            },
            {
                "astId": 5987,
                "contract": "contracts/modules/CompoundV3USDC/CompoundV3StakingUSDCModules.sol:CompoundV3StakingUSDCModule",
                "label": "treasury",
                "offset": 0,
                "slot": "1",
                "type": "t_address"
            },
            {
                "astId": 5989,
                "contract": "contracts/modules/CompoundV3USDC/CompoundV3StakingUSDCModules.sol:CompoundV3StakingUSDCModule",
                "label": "government",
                "offset": 0,
                "slot": "2",
                "type": "t_address"
            },
            {
                "astId": 5991,
                "contract": "contracts/modules/CompoundV3USDC/CompoundV3StakingUSDCModules.sol:CompoundV3StakingUSDCModule",
                "label": "comet",
                "offset": 0,
                "slot": "3",
                "type": "t_address"
            }
        ],
        "types": {
            "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
            }
        }
    }
}
