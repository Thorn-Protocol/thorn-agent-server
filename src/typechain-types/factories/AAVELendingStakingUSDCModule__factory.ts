/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  AAVELendingStakingUSDCModule,
  AAVELendingStakingUSDCModuleInterface,
} from "../AAVELendingStakingUSDCModule";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
      {
        internalType: "address",
        name: "_government",
        type: "address",
      },
      {
        internalType: "address",
        name: "_usdc",
        type: "address",
      },
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldGovernment",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newGovernment",
        type: "address",
      },
    ],
    name: "GovernmentChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldPool",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newPool",
        type: "address",
      },
    ],
    name: "PoolChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_government",
        type: "address",
      },
    ],
    name: "changeGovernment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
    ],
    name: "changePool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "government",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "target",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "value",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "governmentExec",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "usdc",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080346100b957601f610e2438819003918201601f19168301916001600160401b038311848410176100be578084926080946040528339810103126100b957610047816100d4565b90610054602082016100d4565b61006c6060610065604085016100d4565b93016100d4565b9060018060a01b03928380928160018060a01b03199716876000541617600055168560015416176001551683600254161760025516906003541617600355604051610d3b90816100e98239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036100b95756fe6080604052600436101561001257600080fd5b60003560e01c8063030ba25d146100c75780630968f264146100c257806316f0115b146100bd5780632672f526146100b85780633e413bee146100b35780634339bc30146100ae57806361d027b3146100a95780636844a2e9146100a457806398b1e06a1461009f578063caa648b41461009a5763f925bc651461009557600080fd5b6107ee565b6106c9565b610584565b6104f4565b6104cb565b610436565b6103fc565b6103d3565b6103aa565b610215565b61017f565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761010457604052565b6100cc565b67ffffffffffffffff811161010457601f01601f191660200190565b92919261013182610109565b9161013f60405193846100e2565b82948184528183011161015c578281602093846000960137010152565b600080fd5b9080601f8301121561015c5781602061017c93359101610125565b90565b3461015c57604036600319011261015c5760243560043567ffffffffffffffff821161015c576101b66101e8923690600401610161565b506000546001600160a01b03906101d09082163314610919565b6101d982610b11565b60025460005482169116610b7a565b005b602060031982011261015c576004359067ffffffffffffffff821161015c5761017c91600401610161565b3461015c57610223366101ea565b50600080546001600160a01b039061023e9082163314610919565b60035461026190610255906001600160a01b031681565b6001600160a01b031690565b604051632fe4a15f60e21b81523060048201529060c090829060249082905afa8015610371576102a3918491610376575b5061029e81151561098c565b610b11565b6002546102b8906001600160a01b0316610255565b6040516370a0823160e01b815230600482015290916020908290602490829086165afa8015610371577f430648de173157e069201c943adb2d4e340e7cf5b27b1b09c9cb852f03d63b569261033692859261033c575b5084546103269183916001600160a01b031690610b7a565b6040519081529081906020820190565b0390a180f35b6103269192506103639060203d60201161036a575b61035b81836100e2565b8101906109d1565b919061030e565b503d610351565b610980565b610398915060c03d60c0116103a3575b61039081836100e2565b810190610952565b505050505038610292565b503d610386565b3461015c57600036600319011261015c576003546040516001600160a01b039091168152602090f35b3461015c57600036600319011261015c576001546040516001600160a01b039091168152602090f35b3461015c57600036600319011261015c576002546040516001600160a01b039091168152602090f35b6001600160a01b0381160361015c57565b3461015c57602036600319011261015c577f89f24f59f1f74b74999221ad0a9ab9b4d1d2b27bddbf6f91b0c773ca0f94064360043561047481610425565b6001546001600160a01b03919061048e90831633146109e0565b600380548284166001600160a01b031982161790915560408051939091166001600160a01b0390811684529091166020830152819081015b0390a1005b3461015c57600036600319011261015c576000546040516001600160a01b039091168152602090f35b3461015c57602036600319011261015c577fd220bce19af917092091d2523c144f080a8bf6225a4da549d0c689f9f87cd09f60043561053281610425565b6001546001600160a01b03808216919061054d3384146109e0565b6001600160a01b031990911690831617600155604080516001600160a01b03928316815291909216602082015290819081016104c6565b3461015c57610592366101ea565b506105a860018060a01b03600054163314610919565b6002546105bf90610255906001600160a01b031681565b6040516370a0823160e01b81523060048201526020908181602481865afa9081156103715761063b9383916000936106aa575b508290610600821515610a1e565b60035460405163095ea7b360e01b81526001600160a01b03909116600482015260248101929092529094859190829060009082906044820190565b03925af1918215610371577f2a89b2e3d580398d6dc2db5e0f336b52602bbaa51afa9bb5cdf59239cf0d2bea936104c69361067c575b505061032681610c0d565b8161069b92903d106106a3575b61069381836100e2565b810190610a5f565b503880610671565b503d610689565b6106c2919350823d841161036a5761035b81836100e2565b91386105f2565b3461015c57600036600319011261015c576002546106f190610255906001600160a01b031681565b6040516370a0823160e01b815230600482015290602090829060249082905afa9081156103715760009161079e575b5060035461073890610255906001600160a01b031681565b604051632fe4a15f60e21b81523060048201529060c090829060249082905afa8015610371576107749261032692600092610778575b50610a77565b0390f35b61079291925060c03d60c0116103a35761039081836100e2565b5050505050903861076e565b6107b7915060203d60201161036a5761035b81836100e2565b38610720565b9181601f8401121561015c5782359167ffffffffffffffff831161015c576020808501948460051b01011161015c57565b3461015c57606036600319011261015c5767ffffffffffffffff60043581811161015c576108209036906004016107bd565b919060243582811161015c5761083a9036906004016107bd565b9260443590811161015c576108539036906004016107bd565b9260019561086c60018060a01b036001541633146109e0565b85811480610910575b156108cb5760005b81811061088657005b806108c561089e6108998b948688610ab0565b610ac5565b6108a9838b8a610ab0565b356108bf6108b8858c8b610acf565b3691610125565b91610c7a565b0161087d565b60405162461bcd60e51b815260206004820152601860248201527f4172726179206c656e67746873206d757374206d6174636800000000000000006044820152606490fd5b50848614610875565b1561092057565b60405162461bcd60e51b815260206004820152600a60248201526913db9b1e481859d95b9d60b21b6044820152606490fd5b91908260c091031261015c5781519160208101519160408201519160608101519160a0608083015192015190565b6040513d6000823e3d90fd5b1561099357565b60405162461bcd60e51b81526020600482015260166024820152754e6f2062616c616e636520746f20776974686472617760501b6044820152606490fd5b9081602091031261015c575190565b156109e757565b60405162461bcd60e51b815260206004820152600f60248201526e4f6e6c7920676f7665726e616e636560881b6044820152606490fd5b15610a2557565b60405162461bcd60e51b8152602060048201526012602482015271139bc81554d110c81d1bc819195c1bdcda5d60721b6044820152606490fd5b9081602091031261015c5751801515810361015c5790565b91908201809211610a8457565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b9190811015610ac05760051b0190565b610a9a565b3561017c81610425565b9190811015610ac05760051b81013590601e198136030182121561015c57019081359167ffffffffffffffff831161015c57602001823603811361015c579190565b600354600254604051631a4ca37b60e21b81526001600160a01b039182166004820152602481019390935230604484015260209183916064918391600091165af1801561037157610b5f5750565b610b779060203d60201161036a5761035b81836100e2565b50565b60405163a9059cbb60e01b60208083019182526001600160a01b039490941660248301526044808301959095529381529092600091610bba6064826100e2565b519082855af115610980576000513d610c0457506001600160a01b0381163b155b610be25750565b604051635274afe760e01b81526001600160a01b039091166004820152602490fd5b60011415610bdb565b6003546002546001600160a01b0391821692911690823b1561015c57608460009283604051958694859363617ba03760e01b8552600485015260248401523060448401528160648401525af1801561037157610c665750565b67ffffffffffffffff811161010457604052565b916000928392602083519301915af13d15610cfd573d90610c9a82610109565b91610ca860405193846100e2565b82523d6000602084013e5b15610cbb5750565b805115610cca57805190602001fd5b60405162461bcd60e51b815260206004820152600b60248201526a10d85b1b0819985a5b195960aa1b6044820152606490fd5b606090610cb356fea264697066735822122036d70a501af8aca0abd5b58803e3386baa3ece9a5809ada236126bd5627119c764736f6c63430008180033";

type AAVELendingStakingUSDCModuleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AAVELendingStakingUSDCModuleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AAVELendingStakingUSDCModule__factory extends ContractFactory {
  constructor(...args: AAVELendingStakingUSDCModuleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _treasury: AddressLike,
    _government: AddressLike,
    _usdc: AddressLike,
    _pool: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _treasury,
      _government,
      _usdc,
      _pool,
      overrides || {}
    );
  }
  override deploy(
    _treasury: AddressLike,
    _government: AddressLike,
    _usdc: AddressLike,
    _pool: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _treasury,
      _government,
      _usdc,
      _pool,
      overrides || {}
    ) as Promise<
      AAVELendingStakingUSDCModule & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): AAVELendingStakingUSDCModule__factory {
    return super.connect(runner) as AAVELendingStakingUSDCModule__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AAVELendingStakingUSDCModuleInterface {
    return new Interface(_abi) as AAVELendingStakingUSDCModuleInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): AAVELendingStakingUSDCModule {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as AAVELendingStakingUSDCModule;
  }
}
